% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_projections.R
\name{import_projections}
\alias{import_projections}
\title{Import rasters resulting from projection functions}
\usage{
import_projections(
  projection,
  consensus = c("median", "range", "mean", "stdev"),
  present = TRUE,
  past_period = NULL,
  past_gcm = NULL,
  future_period = NULL,
  future_pscen = NULL,
  future_gcm = NULL,
  change_types = c("summary", "by_gcm", "by_change"),
  mop_types = c("simple", "basic", "towards_high_combined", "towards_low_combined",
    "towards_high_end", "towards_low_end")
)
}
\arguments{
\item{projection}{an object of class \code{model_projections},
\code{changes_projections}, \code{variability_projections}, or \code{mop_projections}. This
object is the direct output from one of the projection functions listed in
the description.}

\item{consensus}{(character) consensus measures to import. Available options
are: 'median', 'range', 'mean' and 'stdev' (standard deviation). Default is
c("median", "range", "mean", "stdev"), which imports all options. Only
applicable if \code{projection} is a \code{model_projections} object.}

\item{present}{(logical) wheter to import present-day projections. Default is
TRUE. Not applicable if projection is a  \code{changes_projections} object.}

\item{past_period}{(character) names of specific past periods (e.g., 'LGM' or
'MID') to import. Default is NULL, meaning all available past periods will be
imported.}

\item{past_gcm}{(character) names of specific General Circulation Models
(GCMs) from the past to import. Default is NULL, meaning all available past
GCMs will be imported.}

\item{future_period}{(character) names of specific future periods (e.g.,
'2041-2060' or '2081-2100') to import. Default is NULL, meaning all available
future periods will be imported.}

\item{future_pscen}{(character) names of specific future emission scenarios
(e.g., 'ssp126' or 'ssp585') to import. Default is NULL, meaning all
available future scenarios will be imported.}

\item{future_gcm}{(character) names of specific General Circulation Models
(GCMs) from the future to import. Default is NULL, meaning all available
future GCMs will be imported.}

\item{change_types}{(character) names of the type of computed changes to
import. Available options are: 'summary', 'by_gcm', and 'by_change'. Default
is c("summary", "by_gcm", "by_change"), importing all types. Only applicable
if projection is a \code{changes_projections} object.}

\item{mop_types}{(character) type(s) of MOP to import. Available options are:
basic', 'simple', 'towards_high_combined', 'towards_low_combined',
towards_high_end', and 'towards_low_end'. Default is NULL, meaning all
available MOPs will be imported. Only applicable if projection is a
\code{mop_projections} object.}
}
\value{
A SpatRaster or a list of SpatRasters, structured according to the
input \code{projection} class:
\itemize{
\item If \code{projection} is \code{model_projections}: A stacked \code{SpatRaster}
containing all selected projections.
\item If \code{projection} is \code{changes_projections}: A list of \code{SpatRaster}s,
organized by the selected \code{change_types} (e.g., 'summary', 'by_gcm', and/or 'by_change').
\item If \code{projection} is \code{mop_projections}: A list of \code{SpatRaster}s,
organized by the selected \code{mop_types} (e.g., 'simple' and 'basic').
\item If \code{projection} is \code{variability_projections}: A list of \code{SpatRaster}s,
containing the computed variability.
}
}
\description{
This function facilitates the import of rasters that have been generated and
written to disk by the \code{project_selected()}, \code{projection_changes()},
\code{variability_projections()}, and \code{projection_mop()} functions. Users can
select specific periods (past/future), emission scenarios, General Circulation
Models (GCMs), and result types for import.
}
\examples{
# Step 1: Organize variables for current projection
## Import current variables (used to fit models)
var <- terra::rast(system.file("extdata", "Current_variables.tif",
                               package = "kuenm2"))

## Create a folder in a temporary directory to copy the variables
out_dir_current <- file.path(tempdir(), "Current_raw2")
dir.create(out_dir_current, recursive = TRUE)

## Save current variables in temporary directory
terra::writeRaster(var, file.path(out_dir_current, "Variables.tif"))


# Step 2: Organize future climate variables (example with WorldClim)
## Directory containing the downloaded future climate variables (example)
in_dir <- system.file("extdata", package = "kuenm2")

## Create a folder in a temporary directory to copy the future variables
out_dir_future <- file.path(tempdir(), "Future_raw2")

## Organize and rename the future climate data (structured by year and GCM)
### 'SoilType' will be appended as a static variable in each scenario
organize_future_worldclim(input_dir = in_dir, output_dir = out_dir_future,
                          name_format = "bio_", fixed_variables = var$SoilType)

# Step 3: Prepare data to run multiple projections
## An example with maxnet models
## Import example of fitted_models (output of fit_selected())
data(fitted_model_maxnet, package = "kuenm2")

## Prepare projection data using fitted models to check variables
pr <- prepare_projection(models = fitted_model_maxnet,
                         present_dir = out_dir_current,
                         future_dir = out_dir_future,
                         future_period = c("2041-2060", "2081-2100"),
                         future_pscen = c("ssp126", "ssp585"),
                         future_gcm = c("ACCESS-CM2", "MIROC6"),
                         raster_pattern = ".tif*")

# Step 4: Run multiple model projections
## A folder to save projection results
out_dir <- file.path(tempdir(), "Projection_results/maxnet")
dir.create(out_dir, recursive = TRUE)

## Project selected models to multiple scenarios
p <- project_selected(models = fitted_model_maxnet, projection_data = pr,
                      out_dir = out_dir)

# Use import_projections to import results:
raster_p <- import_projections(projection = p, consensus = "mean")
plot(raster_p)

# Step 5: Identify areas of change in projections
## Contraction, expansion and stability
changes <- projection_changes(model_projections = p, output_dir = out_dir,
                              overwrite = TRUE)
# Use import_projections to import results:
raster_changes <- import_projections(projection = changes,
                                     change_type = c("summary", "by_gcm"))

plot(raster_changes$by_gcm)
plot(raster_changes$Summary)

# Step 6: Perform MOP for all projection scenarios
## Create a folder to save MOP results
out_dir <- file.path(tempdir(), "MOP_results")
dir.create(out_dir, recursive = TRUE)

#Import prepared data to serve as a base for MOP comparisons
data(sp_swd_cat, package = "kuenm2")

## Run MOP
kmop <- projection_mop(data = sp_swd_cat, projection_data = pr,
                       out_dir = out_dir, fitted_models = fitted_model_maxnet,
                       type = "detailed")
# Use import_projections to import results:
raster_mop <- import_projections(projection = kmop,
                                 mop_types = c("simple", "basic",
                                               "towards_high_combined",
                                               "towards_low_combined"))
plot(raster_mop$simple)
plot(raster_mop$basic)
plot(raster_mop$towards_high_combined)
plot(raster_mop$towards_low_combined)

# Step 7: Compute variance from distinct sources
## Set folder to save results
out_dir <- file.path(tempdir())
v <- projection_variability(model_projections = p, by_replicate = FALSE,
                            write_files = TRUE, output_dir = out_dir,
                            overwrite=TRUE)
v
raster_variability <- import_projections(projection = v,
                                         future_period = "2041-2060")
plot(raster_variability)

}
\seealso{
\code{\link[=prepare_projection]{prepare_projection()}}, \code{\link[=projection_changes]{projection_changes()}}, \code{\link[=projection_variability]{projection_variability()}},
\code{\link[=projection_mop]{projection_mop()}}
}
