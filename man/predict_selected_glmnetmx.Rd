% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_selected_glmnetmx.R
\name{predict_selected_glmnetmx}
\alias{predict_selected_glmnetmx}
\title{Predict selected models for a single scenario}
\usage{
predict_selected_glmnetmx(models, spat_var, write_files = FALSE,
                                 write_replicates = FALSE, out_dir = NULL,
                                 consensus_per_model = TRUE,
                                 consensus_general = TRUE,
                                 consensus = c("median", "range", "mean", "stdev"),
                                 clamping = FALSE, var_to_clamp = NULL,
                                 type = "cloglog", overwrite = FALSE,
                                 progress_bar = TRUE)
}
\arguments{
\item{models}{an object of class \code{fitted_models} returned by the fit_selected_glmnetmx() function.}

\item{spat_var}{(SpatRaster) the predictor variables. The names of these variables must match those used to calibrate the models, or those used to run PCA if \code{do_pca = TRUE} in the \code{prepare_data()} function.}

\item{write_files}{(logical) whether to save the predictions (SpatRasters) to disk. Default is FALSE.}

\item{write_replicates}{(logical) whether to save the predictions for each replicate to disk. Only applicable if \code{write_files} is TRUE. Default is FALSE.}

\item{out_dir}{(character) directory path where predictions will be saved. Only relevant if \code{write_files = TRUE}}

\item{consensus_per_model}{(logical) whether to compute consensus per model. Default is TRUE.}

\item{consensus_general}{(logical) whether to compute a general consensus across all models. Default is TRUE.}

\item{consensus}{(character) vector specifying the types of consensus to calculate across replicates and models. Available options are \code{"median"}, \code{"range"}, \code{"mean"}, and \code{"stdev"} (standard deviation). Default is \code{c("median", "range", "mean", "stdev")}.}

\item{clamping}{(character) whether to restricts variable values to the range of the calibration data to avoid extrapolation. Default is \code{TRUE} (free extrapolation).}

\item{var_to_clamp}{(character) vector specifying which variables to clamp. Only applicable if \code{clamping = TRUE}. Default is \code{NULL}, meaning all variables will be clamped.}

\item{type}{(character) the format of the prediction values. Available options are \code{"raw"}, \code{"cumulative"}, \code{"logistic"}, and \code{"cloglog"}. Default is \code{"cloglog"}.}

\item{overwrite}{whether to overwrite SpatRaster if they already exists. Only applicable if \code{write_files} is set to TRUE.}

\item{progress_bar}{(logical) whether to display a progress bar during
processing. Default is TRUE.}
}
\value{
A list containing SpatRaster predictions for each replicate, along with the consensus results for each model and the overall general consensus.
}
\description{
This function predicts selected models for a single environmental scenario, providing options for saving the output and calculating consensus measures (mean, median, etc) across replicates and models.
}
\examples{
# Import variables to predict
var <- terra::rast(system.file("extdata", "Current_variables.tif",
                              package = "kuenm2"))
# Import example of calibration results (output of calibration_glmnetmx)
data("calib_results", package = "kuenm2")
# Fit final models
fm <- fit_selected_glmnetmx(calibration_results = calib_results,
                           n_replicates = 2,
                           rep_type = "kfold",
                           train_portion = 0.7,
                           write_models = FALSE,
                           file_name = NULL,
                           parallel = FALSE,
                           ncores = 1,
                           parallelType = "doSNOW",
                           progress_bar = TRUE,
                           verbose = TRUE,
                           seed = 42)
# Predict to single scenario
p <- predict_selected_glmnetmx(models = fm,
                              spat_var = var,
                              write_files = FALSE,
                              write_replicates = FALSE,
                              out_dir = NULL,
                              consensus_per_model = TRUE,
                              consensus_general = TRUE,
                              consensus = c("median", "range", "mean", "stdev"),
                              clamping = FALSE,
                              var_to_clamp = NULL,
                              type = "cloglog",
                              overwrite = FALSE,
                              progress_bar = TRUE)

}
